// <auto-generated />
using System;
using DataAccessLibrary.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLibrary.Migrations
{
    [DbContext(typeof(PeopleContext))]
    [Migration("20230603103702_DataSeed")]
    partial class DataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLibrary.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9684d77b-dc61-4911-9f36-0e0c6dfdd9ab"),
                            Name = "Heidel"
                        },
                        new
                        {
                            Id = new Guid("e86fec12-5567-4dd6-82bd-7a9a0ebc9e9e"),
                            Name = "Arborstone"
                        });
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("24242eb1-e8d7-4a8e-af9a-667fdf37a752"),
                            CityId = new Guid("9684d77b-dc61-4911-9f36-0e0c6dfdd9ab"),
                            Name = "Best Customer"
                        },
                        new
                        {
                            Id = new Guid("10d480b9-cc6b-4bd9-9195-efed3592e67f"),
                            CityId = new Guid("e86fec12-5567-4dd6-82bd-7a9a0ebc9e9e"),
                            Name = "Worst Customer"
                        });
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("750e95b2-ae10-4e48-9c65-adae23be5fb0"),
                            Name = "Ring"
                        },
                        new
                        {
                            Id = new Guid("f7651581-3f14-4f71-87c1-92d6f09de99c"),
                            Name = "Necklace"
                        });
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Sale", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfSale")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PricePerPiece")
                        .HasColumnType("decimal(6, 2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3136cc0-13ef-4af8-bd3b-a91214cc11d0"),
                            CustomerId = new Guid("24242eb1-e8d7-4a8e-af9a-667fdf37a752"),
                            DateOfSale = new DateTime(2010, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 257.53m,
                            ProductId = new Guid("750e95b2-ae10-4e48-9c65-adae23be5fb0"),
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("4614a97b-2b1d-4170-ba2d-3c74a7906183"),
                            CustomerId = new Guid("10d480b9-cc6b-4bd9-9195-efed3592e67f"),
                            DateOfSale = new DateTime(2011, 11, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 564.02m,
                            ProductId = new Guid("750e95b2-ae10-4e48-9c65-adae23be5fb0"),
                            Quantity = 17
                        },
                        new
                        {
                            Id = new Guid("3a988af4-1b73-4839-91e5-b62784b6e58a"),
                            CustomerId = new Guid("24242eb1-e8d7-4a8e-af9a-667fdf37a752"),
                            DateOfSale = new DateTime(2012, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 405.57m,
                            ProductId = new Guid("f7651581-3f14-4f71-87c1-92d6f09de99c"),
                            Quantity = 11
                        },
                        new
                        {
                            Id = new Guid("7a440841-e4a4-4423-aaae-e888940ac45f"),
                            CustomerId = new Guid("10d480b9-cc6b-4bd9-9195-efed3592e67f"),
                            DateOfSale = new DateTime(2013, 10, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 524.40m,
                            ProductId = new Guid("750e95b2-ae10-4e48-9c65-adae23be5fb0"),
                            Quantity = 16
                        },
                        new
                        {
                            Id = new Guid("0b6604ff-f9ac-46cb-88ba-5003d8c72cea"),
                            CustomerId = new Guid("10d480b9-cc6b-4bd9-9195-efed3592e67f"),
                            DateOfSale = new DateTime(2014, 8, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 251.29m,
                            ProductId = new Guid("750e95b2-ae10-4e48-9c65-adae23be5fb0"),
                            Quantity = 14
                        },
                        new
                        {
                            Id = new Guid("39559be8-1399-463b-b747-03163c798d23"),
                            CustomerId = new Guid("24242eb1-e8d7-4a8e-af9a-667fdf37a752"),
                            DateOfSale = new DateTime(2015, 4, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 444.97m,
                            ProductId = new Guid("750e95b2-ae10-4e48-9c65-adae23be5fb0"),
                            Quantity = 19
                        },
                        new
                        {
                            Id = new Guid("2d3d3114-f83b-4a0f-bbd9-9f73c93d9fea"),
                            CustomerId = new Guid("24242eb1-e8d7-4a8e-af9a-667fdf37a752"),
                            DateOfSale = new DateTime(2016, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 526.30m,
                            ProductId = new Guid("f7651581-3f14-4f71-87c1-92d6f09de99c"),
                            Quantity = 7
                        },
                        new
                        {
                            Id = new Guid("5c6a6c6c-a70d-43c3-b57c-1c91f9c4381e"),
                            CustomerId = new Guid("10d480b9-cc6b-4bd9-9195-efed3592e67f"),
                            DateOfSale = new DateTime(2017, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 672.83m,
                            ProductId = new Guid("f7651581-3f14-4f71-87c1-92d6f09de99c"),
                            Quantity = 13
                        },
                        new
                        {
                            Id = new Guid("3e2057d9-bb32-40f1-b20e-8bd507a84c2b"),
                            CustomerId = new Guid("24242eb1-e8d7-4a8e-af9a-667fdf37a752"),
                            DateOfSale = new DateTime(2018, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 274.79m,
                            ProductId = new Guid("f7651581-3f14-4f71-87c1-92d6f09de99c"),
                            Quantity = 13
                        },
                        new
                        {
                            Id = new Guid("ca52000d-1b51-4522-8dd4-3b718d04157d"),
                            CustomerId = new Guid("10d480b9-cc6b-4bd9-9195-efed3592e67f"),
                            DateOfSale = new DateTime(2019, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 621.65m,
                            ProductId = new Guid("750e95b2-ae10-4e48-9c65-adae23be5fb0"),
                            Quantity = 11
                        },
                        new
                        {
                            Id = new Guid("2e56d544-0333-4e8a-be8f-def8b72e09e7"),
                            CustomerId = new Guid("24242eb1-e8d7-4a8e-af9a-667fdf37a752"),
                            DateOfSale = new DateTime(2020, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 550.58m,
                            ProductId = new Guid("750e95b2-ae10-4e48-9c65-adae23be5fb0"),
                            Quantity = 6
                        },
                        new
                        {
                            Id = new Guid("ad2782f3-23c3-4b7f-a3d5-77efe7841113"),
                            CustomerId = new Guid("24242eb1-e8d7-4a8e-af9a-667fdf37a752"),
                            DateOfSale = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 291.44m,
                            ProductId = new Guid("750e95b2-ae10-4e48-9c65-adae23be5fb0"),
                            Quantity = 12
                        },
                        new
                        {
                            Id = new Guid("5215e406-025d-42c9-a20e-64c7e12621db"),
                            CustomerId = new Guid("10d480b9-cc6b-4bd9-9195-efed3592e67f"),
                            DateOfSale = new DateTime(2022, 3, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PricePerPiece = 197.67m,
                            ProductId = new Guid("750e95b2-ae10-4e48-9c65-adae23be5fb0"),
                            Quantity = 6
                        });
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Customer", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Sale", b =>
                {
                    b.HasOne("DataAccessLibrary.Models.Customer", null)
                        .WithMany("Sales")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccessLibrary.Models.Product", "SaleProduct")
                        .WithMany("ProductSales")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SaleProduct");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Customer", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("DataAccessLibrary.Models.Product", b =>
                {
                    b.Navigation("ProductSales");
                });
#pragma warning restore 612, 618
        }
    }
}
